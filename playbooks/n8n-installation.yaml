---
- name: Install n8n (workflow automation) and set up workflows
  hosts: Strike
  become: true
  vars:
    n8n_dir: /opt/n8n
    workflows_dir: /opt/n8n/workflows
    n8n_user: admin
    n8n_pass: admin
    n8n_host: "http://localhost"
    n8n_port: 5678
    grok_api_key: "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"

  tasks:
    - name: Ensure n8n directory exists
      file:
        path: "{{ n8n_dir }}"
        state: directory
        mode: "0755"

    - name: Ensure workflows directory exists
      file:
        path: "{{ workflows_dir }}"
        state: directory
        mode: "0755"

    - name: Create docker-compose.yml for n8n
      copy:
        dest: "{{ n8n_dir }}/docker-compose.yml"
        content: |
          version: "3"
          services:
            n8n:
              image: n8nio/n8n:latest
              container_name: n8n
              restart: always
              ports:
                - "5678:5678"
              environment:
                - N8N_BASIC_AUTH_ACTIVE=true
                - N8N_BASIC_AUTH_USER={{ n8n_user }}
                - N8N_BASIC_AUTH_PASSWORD={{ n8n_pass }}
                - N8N_SECURE_COOKIE=false
                - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
                - DB_SQLITE_POOL_SIZE=5
                - N8N_RUNNERS_ENABLED=true
                - N8N_BLOCK_ENV_ACCESS_IN_NODE=false
              volumes:
                - n8n_data:/home/node/.n8n
                - {{ workflows_dir }}:/workflows

          volumes:
            n8n_data:

    - name: Start n8n
      command: docker compose -f "{{ n8n_dir }}/docker-compose.yml" up -d

    - name: Wait for n8n to be available
      wait_for:
        host: 127.0.0.1
        port: 5678
        delay: 5
        timeout: 120

    - name: Copy RAG workflow JSON
      copy:
        dest: "{{ workflows_dir }}/rag.json"
        content: |
          {
            "name": "RAG Workflow",
            "active": false,
            "nodes": [
              {
                "parameters": {},
                "name": "Start",
                "type": "n8n-nodes-base.start",
                "typeVersion": 1,
                "position": [250, 300]
              },
              {
                "parameters": {
                  "requestMethod": "POST",
                  "url": "https://api.grok.com/query",
                  "jsonParameters": true,
                  "bodyParametersJson": {
                    "query": "Hi"
                  },
                  "headersJson": {
                    "Authorization": "Bearer {{ grok_api_key }}"
                  }
                },
                "name": "Call Grok API",
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 2,
                "position": [450, 300]
              }
            ],
            "connections": {
              "Start": {
                "main": [
                  [
                    { "node": "Call Grok API", "type": "main", "index": 0 }
                  ]
                ]
              }
            }
          }

    - name: Copy Notification workflow JSON
      copy:
        dest: "{{ workflows_dir }}/notification.json"
        content: |
          {
            "name": "Notification Workflow",
            "active": false,
            "nodes": [
              {
                "parameters": {},
                "name": "Start",
                "type": "n8n-nodes-base.start",
                "typeVersion": 1,
                "position": [250, 300]
              },
              {
                "parameters": {
                  "webhookUri": "YOUR_TEAMS_WEBHOOK_URL"
                },
                "name": "Teams Notification",
                "type": "n8n-nodes-base.microsoftTeams",
                "typeVersion": 1,
                "position": [450, 200]
              },
              {
                "parameters": {
                  "webhookUrl": "YOUR_SLACK_WEBHOOK_URL"
                },
                "name": "Slack Notification",
                "type": "n8n-nodes-base.slack",
                "typeVersion": 1,
                "position": [450, 300]
              },
              {
                "parameters": {
                  "fromEmail": "your-email@gmail.com",
                  "toEmail": "recipient@gmail.com",
                  "subject": "Notification",
                  "text": "This is a test notification from n8n"
                },
                "name": "Gmail Notification",
                "type": "n8n-nodes-base.gmail",
                "typeVersion": 1,
                "position": [450, 400]
              },
              {
                "parameters": {
                  "webhookUrl": "YOUR_DISCORD_WEBHOOK_URL",
                  "content": "Test Discord notification"
                },
                "name": "Discord Notification",
                "type": "n8n-nodes-base.discord",
                "typeVersion": 1,
                "position": [450, 500]
              }
            ],
            "connections": {
              "Start": {
                "main": [
                  [
                    { "node": "Teams Notification", "type": "main", "index": 0 },
                    { "node": "Slack Notification", "type": "main", "index": 0 },
                    { "node": "Gmail Notification", "type": "main", "index": 0 },
                    { "node": "Discord Notification", "type": "main", "index": 0 }
                  ]
                ]
              }
            }
          }

    - name: Copy Block Caldera workflow JSON (raw)
      copy:
        dest: "{{ workflows_dir }}/block-caldera.json"
        content: |
          {% raw %}
          {
            "name": "Block Caldera IP",
            "active": false,
            "nodes": [
              {
                "parameters": {},
                "name": "Start",
                "type": "n8n-nodes-base.start",
                "typeVersion": 1,
                "position": [250, 300]
              },
              {
                "parameters": {
                  "command": "sudo iptables -A INPUT -s {{$json[\"attacker_ip\"]}} -j DROP",
                  "host": "HONEYPOT_VM_IP",
                  "username": "root",
                  "password": "HONEYPOT_PASS"
                },
                "name": "Block IP on Honeypot",
                "type": "n8n-nodes-base.ssh",
                "typeVersion": 1,
                "position": [500, 300]
              }
            ],
            "connections": {
              "Start": { "main":[ [ { "node":"Block IP on Honeypot", "type":"main", "index":0 } ] ] }
            }
          }
          {% endraw %}

    - name: Copy Grafana Alerts workflow JSON
      copy:
        dest: "{{ workflows_dir }}/grafana-alerts.json"
        content: |
          {
            "name": "Grafana + Loki Alerts",
            "active": false,
            "nodes": [
              {
                "parameters": {},
                "name": "Start",
                "type": "n8n-nodes-base.start",
                "typeVersion": 1,
                "position": [250, 300]
              },
              {
                "parameters": {
                  "authentication": "basicAuth",
                  "url": "http://grafana:3000/api/alerts",
                  "options": {
                    "sendBody": false
                  },
                  "auth": {
                    "user": "admin",
                    "password": "admin"
                  }
                },
                "name": "Fetch Grafana Alerts",
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 2,
                "position": [500, 200]
              },
              {
                "parameters": {
                  "url": "http://loki:3100/loki/api/v1/query_range?query={job=\\\"honeypot\\\"}"
                },
                "name": "Fetch Loki Logs",
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 2,
                "position": [500, 400]
              },
              {
                "parameters": {
                  "mode": "append"
                },
                "name": "Merge Alerts + Logs",
                "type": "n8n-nodes-base.merge",
                "typeVersion": 1,
                "position": [750, 300]
              }
            ],
            "connections": {
              "Start": {
                "main": [
                  [
                    { "node": "Fetch Grafana Alerts", "type": "main", "index": 0 },
                    { "node": "Fetch Loki Logs", "type": "main", "index": 0 }
                  ]
                ]
              },
              "Fetch Grafana Alerts": {
                "main": [
                  [
                    { "node": "Merge Alerts + Logs", "type": "main", "index": 0 }
                  ]
                ]
              },
              "Fetch Loki Logs": {
                "main": [
                  [
                    { "node": "Merge Alerts + Logs", "type": "main", "index": 1 }
                  ]
                ]
              }
            }
          }

    - name: Import Block Caldera workflow into n8n
      command: docker exec n8n n8n import:workflow --input="/workflows/block-caldera.json" --overwrite

    - name: Import Grafana Alerts workflow into n8n
      command: docker exec n8n n8n import:workflow --input="/workflows/grafana-alerts.json" --overwrite

    - name: Import RAG workflow into n8n
      command: docker exec n8n n8n import:workflow --input="/workflows/rag.json" --overwrite

    - name: Import Notification workflow into n8n
      command: docker exec n8n n8n import:workflow --input="/workflows/notification.json" --overwrite
