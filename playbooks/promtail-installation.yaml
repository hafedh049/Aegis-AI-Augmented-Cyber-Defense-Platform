---
- name: Deploy Promtail Log Shipper on HoneyNet (sends logs to Loki on Arsenal)
  hosts: HoneyNet
  vars:
    promtail_image: "{{ PROMTAIL_IMAGE | default('grafana/promtail:2.9.0') }}"
    promtail_container_name: "{{ PROMTAIL_CONTAINER_NAME | default('promtail') }}"
    promtail_port: "{{ PROMTAIL_PORT | default(9080) }}"
    loki_port: "{{ LOKI_PORT | default(3100) }}"

  tasks:
    - name: Install Python pip
      apt:
        name: python3-pip
        state: present

    - name: Install setuptools with break-system-packages
      pip:
        name: setuptools
        executable: pip3
        extra_args: --break-system-packages

    - name: Install docker Python module
      pip:
        name:
          - docker
          - docker-compose
        executable: pip3
        extra_args: --break-system-packages

    # ============================================================
    # Promtail (Log Shipper to Loki)
    # ============================================================
    - name: "[PROMTAIL] Ensure Promtail directory exists"
      file:
        path: /opt/promtail
        state: directory
        mode: "0755"

    - name: "[PROMTAIL] Install Docker"
      apt:
        name:
          - docker.io
        state: present
        update_cache: true

    - name: "[PROMTAIL] Enable and start Docker"
      systemd:
        name: docker
        state: started
        enabled: true

    - name: "[PROMTAIL] Pull Promtail image"
      community.docker.docker_image:
        name: "{{ promtail_image }}"
        source: pull

    - name: "[PROMTAIL] Create Promtail config file"
      copy:
        dest: /opt/promtail/config.yml
        content: |
          server:
            http_listen_port: {{ promtail_port }}
            grpc_listen_port: 0

          positions:
            filename: /tmp/positions.yaml

          clients:
            - url: "http://{{ hostvars['Arsenal']['ansible_host'] | default(groups['Arsenal'][0]) }}:{{ loki_port }}/loki/api/v1/push"

          scrape_configs:
            - job_name: varlogs
              static_configs:
                - targets:
                    - localhost
                  labels:
                    job: honeypot-logs
                    host: "{{ inventory_hostname }}"
                    __path__: /var/log/*.log

    - name: "[PROMTAIL] Stop existing Promtail container if running"
      community.docker.docker_container:
        name: "{{ promtail_container_name }}"
        state: absent
      ignore_errors: true

    - name: "[PROMTAIL] Start Promtail with Docker run command"
      community.docker.docker_container:
        name: "{{ promtail_container_name }}"
        image: "{{ promtail_image }}"
        state: started
        restart_policy: unless-stopped
        ports:
          - "{{ promtail_port }}:{{ promtail_port }}"
        volumes:
          - "/var/log:/var/log:ro"
          - "/opt/promtail/config.yml:/etc/promtail/config.yml:ro"
        command: "-config.file=/etc/promtail/config.yml"

    - name: "[PROMTAIL] Wait for Promtail to start"
      wait_for:
        port: "{{ promtail_port }}"
        host: localhost
        timeout: 30
        delay: 5

    - name: "[PROMTAIL] Check Promtail health"
      uri:
        url: "http://localhost:{{ promtail_port }}/metrics"
        method: GET
        status_code: 200
      register: promtail_health
      retries: 10
      delay: 3
      until: promtail_health.status == 200

    - name: "[PROMTAIL] Deployment complete"
      debug:
        msg: |
          âœ… Promtail is running on {{ inventory_hostname }}.
          - Container: {{ promtail_container_name }}
          - Image: {{ promtail_image }}
          - Shipping logs to Loki at: {{ hostvars['Arsenal']['ansible_host'] | default(groups['Arsenal'][0]) }}:{{ loki_port }}
          - Config: /opt/promtail/config.yml
          - Logs scraped
