---
- name: Install Grafana and Loki (Central)
  hosts: Strike
  become: true
  tasks:
    - name: Ensure logging directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - /opt/logging
        - /opt/logging/loki/chunks
        - /opt/logging/loki/index
        - /opt/logging/loki/cache
        - /opt/logging/loki/wal
        - /opt/logging/loki/compactor
        - /opt/logging/provisioning/datasources

    - name: Create docker-compose.yml for Grafana+Loki
      copy:
        dest: /opt/logging/docker-compose.yml
        content: |
          version: "3"
          services:
            loki:
              image: grafana/loki:2.9.0
              container_name: loki
              user: "0:0"
              ports:
                - "3100:3100"
              command: -config.file=/etc/loki/local-config.yaml
              volumes:
                - /opt/logging/loki-config.yaml:/etc/loki/local-config.yaml
                - /opt/logging/loki/chunks:/loki/chunks
                - /opt/logging/loki/index:/loki/index
                - /opt/logging/loki/cache:/loki/cache
                - /opt/logging/loki/wal:/loki/wal
                - /opt/logging/loki/compactor:/loki/compactor

            grafana:
              image: grafana/grafana:10.4.2
              container_name: grafana
              ports:
                - "3000:3000"
              environment:
                - GF_SECURITY_ADMIN_USER=admin
                - GF_SECURITY_ADMIN_PASSWORD=admin
              depends_on:
                - loki
              volumes:
                - grafana-data:/var/lib/grafana
                - /opt/logging/provisioning:/etc/grafana/provisioning

          volumes:
            grafana-data:

    - name: Loki config file
      copy:
        dest: /opt/logging/loki-config.yaml
        content: |
          auth_enabled: false

          server:
            http_listen_port: 3100

          ingester:
            lifecycler:
              ring:
                kvstore:
                  store: inmemory
                replication_factor: 1
            chunk_idle_period: 5m
            chunk_retain_period: 30s
            wal:
              enabled: true
              dir: /loki/wal
            max_transfer_retries: 0

          schema_config:
            configs:
              - from: 2020-10-24
                store: boltdb-shipper
                object_store: filesystem
                schema: v11
                index:
                  prefix: index_
                  period: 24h

          storage_config:
            boltdb_shipper:
              active_index_directory: /loki/index
              cache_location: /loki/cache
              shared_store: filesystem
            filesystem:
              directory: /loki/chunks

          compactor:
            working_directory: /loki/compactor
            shared_store: filesystem

          limits_config:
            enforce_metric_name: false
            reject_old_samples: true
            reject_old_samples_max_age: 168h

          chunk_store_config:
            max_look_back_period: 0s

          table_manager:
            retention_deletes_enabled: true
            retention_period: 7d

    - name: Add Loki datasource provisioning
      copy:
        dest: /opt/logging/provisioning/datasources/loki.yaml
        content: |
          apiVersion: 1
          datasources:
            - name: Loki
              type: loki
              access: proxy
              url: http://loki:3100
              isDefault: true

    - name: Create systemd service for Grafana+Loki stack
      copy:
        dest: /etc/systemd/system/logging-stack.service
        mode: "0644"
        content: |
          [Unit]
          Description=Grafana + Loki Logging Stack
          Requires=docker.service
          After=docker.service

          [Service]
          Type=oneshot
          RemainAfterExit=true
          WorkingDirectory=/opt/logging
          ExecStart=/usr/bin/docker compose -f /opt/logging/docker-compose.yml up -d
          ExecStop=/usr/bin/docker compose -f /opt/logging/docker-compose.yml down

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      command: systemctl daemon-reexec

    - name: Enable logging stack service
      systemd:
        name: logging-stack.service
        enabled: true
        state: started
